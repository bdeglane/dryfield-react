import '../style/style.scss';
import Game from './controller/Game.js';

let game = new Game();
game.init();


// 1. define action
// const IRRIGUER = 'IRRIGUER';
// {
// 	type: IRRIGUER,
// 	text: 'Ajouter de l\'eau'
// }

/*

 le store decrit comment une action va modifier l'etat de l'application

 le dispatcher contient les actions



 1. action
 {
 type: IRRIGUER,
 text: 'Ajouter de l\'eau'
 }

 2. dispatcher
 contient le(s) store(s) et passe l'action à travers elle

 3. store
 contient l'etat de l'application
 emet un evenement si changement

 4. vue

 */

/*
 1.

 reducer dans redux
 function pure(previousState,dispatchingAction) {
 return nextState;
 }

 export const irriguer = (state = 0, action) => {
 switch (action.type) {
 case 'IRRIGUER':
 return state + 1;
 break;
 case 'RECOLTER':
 return state + 1;
 break;
 default:
 return state;
 break;
 }
 };

 3. on importe redux et on créé le store
 import { createStore } from 'redux';
 const store = createStore(irriguer);

 le store à trois méthode importante

 return current state
 store.getState();

 distribue les actions
 store.dispatch({ type: 'IRRIGUER' });

 const render = ()=>{
 	document.body.innerText = store.getState();
 };

 execute une callback quand une action est distribué
 store.subscribe(render);
 render();

 4. on créé un évenement click pour lancer l'action
 document.addEventListener('click',()=>{
 store.dispatch({ type: 'IRRIGUER' });
 });

 */